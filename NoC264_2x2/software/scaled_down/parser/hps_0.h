#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'hps_fpga' in
 * file './hps_fpga.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'video_pixel_buffer_dma_0', class 'altera_up_avalon_video_pixel_buffer_dma'
 * The macros are prefixed with 'VIDEO_PIXEL_BUFFER_DMA_0_'.
 * The prefix is the slave descriptor.
 */
#define VIDEO_PIXEL_BUFFER_DMA_0_COMPONENT_TYPE altera_up_avalon_video_pixel_buffer_dma
#define VIDEO_PIXEL_BUFFER_DMA_0_COMPONENT_NAME video_pixel_buffer_dma_0
#define VIDEO_PIXEL_BUFFER_DMA_0_BASE 0x0
#define VIDEO_PIXEL_BUFFER_DMA_0_SPAN 16
#define VIDEO_PIXEL_BUFFER_DMA_0_END 0xf

/*
 * Macros for device 'cpu_1_rx_7', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_RX_7_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_RX_7_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_RX_7_COMPONENT_NAME cpu_1_rx_7
#define CPU_1_RX_7_BASE 0x10
#define CPU_1_RX_7_SPAN 32
#define CPU_1_RX_7_END 0x2f
#define CPU_1_RX_7_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_RX_7_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_RX_7_CAPTURE 0
#define CPU_1_RX_7_DATA_WIDTH 32
#define CPU_1_RX_7_DO_TEST_BENCH_WIRING 0
#define CPU_1_RX_7_DRIVEN_SIM_VALUE 0
#define CPU_1_RX_7_EDGE_TYPE NONE
#define CPU_1_RX_7_FREQ 50000000
#define CPU_1_RX_7_HAS_IN 1
#define CPU_1_RX_7_HAS_OUT 0
#define CPU_1_RX_7_HAS_TRI 0
#define CPU_1_RX_7_IRQ_TYPE NONE
#define CPU_1_RX_7_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_rx_6', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_RX_6_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_RX_6_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_RX_6_COMPONENT_NAME cpu_1_rx_6
#define CPU_1_RX_6_BASE 0x20
#define CPU_1_RX_6_SPAN 32
#define CPU_1_RX_6_END 0x3f
#define CPU_1_RX_6_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_RX_6_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_RX_6_CAPTURE 0
#define CPU_1_RX_6_DATA_WIDTH 32
#define CPU_1_RX_6_DO_TEST_BENCH_WIRING 0
#define CPU_1_RX_6_DRIVEN_SIM_VALUE 0
#define CPU_1_RX_6_EDGE_TYPE NONE
#define CPU_1_RX_6_FREQ 50000000
#define CPU_1_RX_6_HAS_IN 1
#define CPU_1_RX_6_HAS_OUT 0
#define CPU_1_RX_6_HAS_TRI 0
#define CPU_1_RX_6_IRQ_TYPE NONE
#define CPU_1_RX_6_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_rx_5', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_RX_5_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_RX_5_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_RX_5_COMPONENT_NAME cpu_1_rx_5
#define CPU_1_RX_5_BASE 0x30
#define CPU_1_RX_5_SPAN 32
#define CPU_1_RX_5_END 0x4f
#define CPU_1_RX_5_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_RX_5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_RX_5_CAPTURE 0
#define CPU_1_RX_5_DATA_WIDTH 32
#define CPU_1_RX_5_DO_TEST_BENCH_WIRING 0
#define CPU_1_RX_5_DRIVEN_SIM_VALUE 0
#define CPU_1_RX_5_EDGE_TYPE NONE
#define CPU_1_RX_5_FREQ 50000000
#define CPU_1_RX_5_HAS_IN 1
#define CPU_1_RX_5_HAS_OUT 0
#define CPU_1_RX_5_HAS_TRI 0
#define CPU_1_RX_5_IRQ_TYPE NONE
#define CPU_1_RX_5_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_rx_4', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_RX_4_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_RX_4_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_RX_4_COMPONENT_NAME cpu_1_rx_4
#define CPU_1_RX_4_BASE 0x40
#define CPU_1_RX_4_SPAN 32
#define CPU_1_RX_4_END 0x5f
#define CPU_1_RX_4_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_RX_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_RX_4_CAPTURE 0
#define CPU_1_RX_4_DATA_WIDTH 32
#define CPU_1_RX_4_DO_TEST_BENCH_WIRING 0
#define CPU_1_RX_4_DRIVEN_SIM_VALUE 0
#define CPU_1_RX_4_EDGE_TYPE NONE
#define CPU_1_RX_4_FREQ 50000000
#define CPU_1_RX_4_HAS_IN 1
#define CPU_1_RX_4_HAS_OUT 0
#define CPU_1_RX_4_HAS_TRI 0
#define CPU_1_RX_4_IRQ_TYPE NONE
#define CPU_1_RX_4_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_rx_3', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_RX_3_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_RX_3_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_RX_3_COMPONENT_NAME cpu_1_rx_3
#define CPU_1_RX_3_BASE 0x50
#define CPU_1_RX_3_SPAN 32
#define CPU_1_RX_3_END 0x6f
#define CPU_1_RX_3_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_RX_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_RX_3_CAPTURE 0
#define CPU_1_RX_3_DATA_WIDTH 32
#define CPU_1_RX_3_DO_TEST_BENCH_WIRING 0
#define CPU_1_RX_3_DRIVEN_SIM_VALUE 0
#define CPU_1_RX_3_EDGE_TYPE NONE
#define CPU_1_RX_3_FREQ 50000000
#define CPU_1_RX_3_HAS_IN 1
#define CPU_1_RX_3_HAS_OUT 0
#define CPU_1_RX_3_HAS_TRI 0
#define CPU_1_RX_3_IRQ_TYPE NONE
#define CPU_1_RX_3_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_rx_2', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_RX_2_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_RX_2_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_RX_2_COMPONENT_NAME cpu_1_rx_2
#define CPU_1_RX_2_BASE 0x60
#define CPU_1_RX_2_SPAN 32
#define CPU_1_RX_2_END 0x7f
#define CPU_1_RX_2_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_RX_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_RX_2_CAPTURE 0
#define CPU_1_RX_2_DATA_WIDTH 32
#define CPU_1_RX_2_DO_TEST_BENCH_WIRING 0
#define CPU_1_RX_2_DRIVEN_SIM_VALUE 0
#define CPU_1_RX_2_EDGE_TYPE NONE
#define CPU_1_RX_2_FREQ 50000000
#define CPU_1_RX_2_HAS_IN 1
#define CPU_1_RX_2_HAS_OUT 0
#define CPU_1_RX_2_HAS_TRI 0
#define CPU_1_RX_2_IRQ_TYPE NONE
#define CPU_1_RX_2_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_rx_1', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_RX_1_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_RX_1_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_RX_1_COMPONENT_NAME cpu_1_rx_1
#define CPU_1_RX_1_BASE 0x70
#define CPU_1_RX_1_SPAN 32
#define CPU_1_RX_1_END 0x8f
#define CPU_1_RX_1_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_RX_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_RX_1_CAPTURE 0
#define CPU_1_RX_1_DATA_WIDTH 32
#define CPU_1_RX_1_DO_TEST_BENCH_WIRING 0
#define CPU_1_RX_1_DRIVEN_SIM_VALUE 0
#define CPU_1_RX_1_EDGE_TYPE NONE
#define CPU_1_RX_1_FREQ 50000000
#define CPU_1_RX_1_HAS_IN 1
#define CPU_1_RX_1_HAS_OUT 0
#define CPU_1_RX_1_HAS_TRI 0
#define CPU_1_RX_1_IRQ_TYPE NONE
#define CPU_1_RX_1_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_rx_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_RX_0_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_RX_0_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_RX_0_COMPONENT_NAME cpu_1_rx_0
#define CPU_1_RX_0_BASE 0x80
#define CPU_1_RX_0_SPAN 32
#define CPU_1_RX_0_END 0x9f
#define CPU_1_RX_0_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_RX_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_RX_0_CAPTURE 0
#define CPU_1_RX_0_DATA_WIDTH 32
#define CPU_1_RX_0_DO_TEST_BENCH_WIRING 0
#define CPU_1_RX_0_DRIVEN_SIM_VALUE 0
#define CPU_1_RX_0_EDGE_TYPE NONE
#define CPU_1_RX_0_FREQ 50000000
#define CPU_1_RX_0_HAS_IN 1
#define CPU_1_RX_0_HAS_OUT 0
#define CPU_1_RX_0_HAS_TRI 0
#define CPU_1_RX_0_IRQ_TYPE NONE
#define CPU_1_RX_0_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_tx_7', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_TX_7_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_TX_7_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_TX_7_COMPONENT_NAME cpu_1_tx_7
#define CPU_1_TX_7_BASE 0x90
#define CPU_1_TX_7_SPAN 32
#define CPU_1_TX_7_END 0xaf
#define CPU_1_TX_7_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_TX_7_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_TX_7_CAPTURE 0
#define CPU_1_TX_7_DATA_WIDTH 32
#define CPU_1_TX_7_DO_TEST_BENCH_WIRING 0
#define CPU_1_TX_7_DRIVEN_SIM_VALUE 0
#define CPU_1_TX_7_EDGE_TYPE NONE
#define CPU_1_TX_7_FREQ 50000000
#define CPU_1_TX_7_HAS_IN 0
#define CPU_1_TX_7_HAS_OUT 1
#define CPU_1_TX_7_HAS_TRI 0
#define CPU_1_TX_7_IRQ_TYPE NONE
#define CPU_1_TX_7_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_tx_6', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_TX_6_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_TX_6_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_TX_6_COMPONENT_NAME cpu_1_tx_6
#define CPU_1_TX_6_BASE 0xa0
#define CPU_1_TX_6_SPAN 32
#define CPU_1_TX_6_END 0xbf
#define CPU_1_TX_6_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_TX_6_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_TX_6_CAPTURE 0
#define CPU_1_TX_6_DATA_WIDTH 32
#define CPU_1_TX_6_DO_TEST_BENCH_WIRING 0
#define CPU_1_TX_6_DRIVEN_SIM_VALUE 0
#define CPU_1_TX_6_EDGE_TYPE NONE
#define CPU_1_TX_6_FREQ 50000000
#define CPU_1_TX_6_HAS_IN 0
#define CPU_1_TX_6_HAS_OUT 1
#define CPU_1_TX_6_HAS_TRI 0
#define CPU_1_TX_6_IRQ_TYPE NONE
#define CPU_1_TX_6_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_tx_5', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_TX_5_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_TX_5_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_TX_5_COMPONENT_NAME cpu_1_tx_5
#define CPU_1_TX_5_BASE 0xb0
#define CPU_1_TX_5_SPAN 32
#define CPU_1_TX_5_END 0xcf
#define CPU_1_TX_5_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_TX_5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_TX_5_CAPTURE 0
#define CPU_1_TX_5_DATA_WIDTH 32
#define CPU_1_TX_5_DO_TEST_BENCH_WIRING 0
#define CPU_1_TX_5_DRIVEN_SIM_VALUE 0
#define CPU_1_TX_5_EDGE_TYPE NONE
#define CPU_1_TX_5_FREQ 50000000
#define CPU_1_TX_5_HAS_IN 0
#define CPU_1_TX_5_HAS_OUT 1
#define CPU_1_TX_5_HAS_TRI 0
#define CPU_1_TX_5_IRQ_TYPE NONE
#define CPU_1_TX_5_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_tx_4', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_TX_4_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_TX_4_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_TX_4_COMPONENT_NAME cpu_1_tx_4
#define CPU_1_TX_4_BASE 0xc0
#define CPU_1_TX_4_SPAN 32
#define CPU_1_TX_4_END 0xdf
#define CPU_1_TX_4_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_TX_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_TX_4_CAPTURE 0
#define CPU_1_TX_4_DATA_WIDTH 32
#define CPU_1_TX_4_DO_TEST_BENCH_WIRING 0
#define CPU_1_TX_4_DRIVEN_SIM_VALUE 0
#define CPU_1_TX_4_EDGE_TYPE NONE
#define CPU_1_TX_4_FREQ 50000000
#define CPU_1_TX_4_HAS_IN 0
#define CPU_1_TX_4_HAS_OUT 1
#define CPU_1_TX_4_HAS_TRI 0
#define CPU_1_TX_4_IRQ_TYPE NONE
#define CPU_1_TX_4_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_tx_3', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_TX_3_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_TX_3_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_TX_3_COMPONENT_NAME cpu_1_tx_3
#define CPU_1_TX_3_BASE 0xd0
#define CPU_1_TX_3_SPAN 32
#define CPU_1_TX_3_END 0xef
#define CPU_1_TX_3_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_TX_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_TX_3_CAPTURE 0
#define CPU_1_TX_3_DATA_WIDTH 32
#define CPU_1_TX_3_DO_TEST_BENCH_WIRING 0
#define CPU_1_TX_3_DRIVEN_SIM_VALUE 0
#define CPU_1_TX_3_EDGE_TYPE NONE
#define CPU_1_TX_3_FREQ 50000000
#define CPU_1_TX_3_HAS_IN 0
#define CPU_1_TX_3_HAS_OUT 1
#define CPU_1_TX_3_HAS_TRI 0
#define CPU_1_TX_3_IRQ_TYPE NONE
#define CPU_1_TX_3_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_tx_2', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_TX_2_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_TX_2_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_TX_2_COMPONENT_NAME cpu_1_tx_2
#define CPU_1_TX_2_BASE 0xe0
#define CPU_1_TX_2_SPAN 32
#define CPU_1_TX_2_END 0xff
#define CPU_1_TX_2_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_TX_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_TX_2_CAPTURE 0
#define CPU_1_TX_2_DATA_WIDTH 32
#define CPU_1_TX_2_DO_TEST_BENCH_WIRING 0
#define CPU_1_TX_2_DRIVEN_SIM_VALUE 0
#define CPU_1_TX_2_EDGE_TYPE NONE
#define CPU_1_TX_2_FREQ 50000000
#define CPU_1_TX_2_HAS_IN 0
#define CPU_1_TX_2_HAS_OUT 1
#define CPU_1_TX_2_HAS_TRI 0
#define CPU_1_TX_2_IRQ_TYPE NONE
#define CPU_1_TX_2_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_tx_1', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_TX_1_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_TX_1_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_TX_1_COMPONENT_NAME cpu_1_tx_1
#define CPU_1_TX_1_BASE 0xf0
#define CPU_1_TX_1_SPAN 32
#define CPU_1_TX_1_END 0x10f
#define CPU_1_TX_1_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_TX_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_TX_1_CAPTURE 0
#define CPU_1_TX_1_DATA_WIDTH 32
#define CPU_1_TX_1_DO_TEST_BENCH_WIRING 0
#define CPU_1_TX_1_DRIVEN_SIM_VALUE 0
#define CPU_1_TX_1_EDGE_TYPE NONE
#define CPU_1_TX_1_FREQ 50000000
#define CPU_1_TX_1_HAS_IN 0
#define CPU_1_TX_1_HAS_OUT 1
#define CPU_1_TX_1_HAS_TRI 0
#define CPU_1_TX_1_IRQ_TYPE NONE
#define CPU_1_TX_1_RESET_VALUE 0

/*
 * Macros for device 'cpu_1_tx_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_1_TX_0_'.
 * The prefix is the slave descriptor.
 */
#define CPU_1_TX_0_COMPONENT_TYPE altera_avalon_pio
#define CPU_1_TX_0_COMPONENT_NAME cpu_1_tx_0
#define CPU_1_TX_0_BASE 0x100
#define CPU_1_TX_0_SPAN 32
#define CPU_1_TX_0_END 0x11f
#define CPU_1_TX_0_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_1_TX_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_1_TX_0_CAPTURE 0
#define CPU_1_TX_0_DATA_WIDTH 32
#define CPU_1_TX_0_DO_TEST_BENCH_WIRING 0
#define CPU_1_TX_0_DRIVEN_SIM_VALUE 0
#define CPU_1_TX_0_EDGE_TYPE NONE
#define CPU_1_TX_0_FREQ 50000000
#define CPU_1_TX_0_HAS_IN 0
#define CPU_1_TX_0_HAS_OUT 1
#define CPU_1_TX_0_HAS_TRI 0
#define CPU_1_TX_0_IRQ_TYPE NONE
#define CPU_1_TX_0_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_rx_7', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_RX_7_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_RX_7_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_RX_7_COMPONENT_NAME cpu_0_rx_7
#define CPU_0_RX_7_BASE 0x110
#define CPU_0_RX_7_SPAN 32
#define CPU_0_RX_7_END 0x12f
#define CPU_0_RX_7_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_RX_7_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_RX_7_CAPTURE 0
#define CPU_0_RX_7_DATA_WIDTH 32
#define CPU_0_RX_7_DO_TEST_BENCH_WIRING 0
#define CPU_0_RX_7_DRIVEN_SIM_VALUE 0
#define CPU_0_RX_7_EDGE_TYPE NONE
#define CPU_0_RX_7_FREQ 50000000
#define CPU_0_RX_7_HAS_IN 1
#define CPU_0_RX_7_HAS_OUT 0
#define CPU_0_RX_7_HAS_TRI 0
#define CPU_0_RX_7_IRQ_TYPE NONE
#define CPU_0_RX_7_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_rx_6', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_RX_6_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_RX_6_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_RX_6_COMPONENT_NAME cpu_0_rx_6
#define CPU_0_RX_6_BASE 0x120
#define CPU_0_RX_6_SPAN 32
#define CPU_0_RX_6_END 0x13f
#define CPU_0_RX_6_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_RX_6_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_RX_6_CAPTURE 0
#define CPU_0_RX_6_DATA_WIDTH 32
#define CPU_0_RX_6_DO_TEST_BENCH_WIRING 0
#define CPU_0_RX_6_DRIVEN_SIM_VALUE 0
#define CPU_0_RX_6_EDGE_TYPE NONE
#define CPU_0_RX_6_FREQ 50000000
#define CPU_0_RX_6_HAS_IN 1
#define CPU_0_RX_6_HAS_OUT 0
#define CPU_0_RX_6_HAS_TRI 0
#define CPU_0_RX_6_IRQ_TYPE NONE
#define CPU_0_RX_6_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_rx_5', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_RX_5_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_RX_5_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_RX_5_COMPONENT_NAME cpu_0_rx_5
#define CPU_0_RX_5_BASE 0x130
#define CPU_0_RX_5_SPAN 32
#define CPU_0_RX_5_END 0x14f
#define CPU_0_RX_5_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_RX_5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_RX_5_CAPTURE 0
#define CPU_0_RX_5_DATA_WIDTH 32
#define CPU_0_RX_5_DO_TEST_BENCH_WIRING 0
#define CPU_0_RX_5_DRIVEN_SIM_VALUE 0
#define CPU_0_RX_5_EDGE_TYPE NONE
#define CPU_0_RX_5_FREQ 50000000
#define CPU_0_RX_5_HAS_IN 1
#define CPU_0_RX_5_HAS_OUT 0
#define CPU_0_RX_5_HAS_TRI 0
#define CPU_0_RX_5_IRQ_TYPE NONE
#define CPU_0_RX_5_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_rx_4', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_RX_4_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_RX_4_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_RX_4_COMPONENT_NAME cpu_0_rx_4
#define CPU_0_RX_4_BASE 0x140
#define CPU_0_RX_4_SPAN 32
#define CPU_0_RX_4_END 0x15f
#define CPU_0_RX_4_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_RX_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_RX_4_CAPTURE 0
#define CPU_0_RX_4_DATA_WIDTH 32
#define CPU_0_RX_4_DO_TEST_BENCH_WIRING 0
#define CPU_0_RX_4_DRIVEN_SIM_VALUE 0
#define CPU_0_RX_4_EDGE_TYPE NONE
#define CPU_0_RX_4_FREQ 50000000
#define CPU_0_RX_4_HAS_IN 1
#define CPU_0_RX_4_HAS_OUT 0
#define CPU_0_RX_4_HAS_TRI 0
#define CPU_0_RX_4_IRQ_TYPE NONE
#define CPU_0_RX_4_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_rx_3', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_RX_3_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_RX_3_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_RX_3_COMPONENT_NAME cpu_0_rx_3
#define CPU_0_RX_3_BASE 0x150
#define CPU_0_RX_3_SPAN 32
#define CPU_0_RX_3_END 0x16f
#define CPU_0_RX_3_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_RX_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_RX_3_CAPTURE 0
#define CPU_0_RX_3_DATA_WIDTH 32
#define CPU_0_RX_3_DO_TEST_BENCH_WIRING 0
#define CPU_0_RX_3_DRIVEN_SIM_VALUE 0
#define CPU_0_RX_3_EDGE_TYPE NONE
#define CPU_0_RX_3_FREQ 50000000
#define CPU_0_RX_3_HAS_IN 1
#define CPU_0_RX_3_HAS_OUT 0
#define CPU_0_RX_3_HAS_TRI 0
#define CPU_0_RX_3_IRQ_TYPE NONE
#define CPU_0_RX_3_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_rx_2', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_RX_2_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_RX_2_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_RX_2_COMPONENT_NAME cpu_0_rx_2
#define CPU_0_RX_2_BASE 0x160
#define CPU_0_RX_2_SPAN 32
#define CPU_0_RX_2_END 0x17f
#define CPU_0_RX_2_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_RX_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_RX_2_CAPTURE 0
#define CPU_0_RX_2_DATA_WIDTH 32
#define CPU_0_RX_2_DO_TEST_BENCH_WIRING 0
#define CPU_0_RX_2_DRIVEN_SIM_VALUE 0
#define CPU_0_RX_2_EDGE_TYPE NONE
#define CPU_0_RX_2_FREQ 50000000
#define CPU_0_RX_2_HAS_IN 1
#define CPU_0_RX_2_HAS_OUT 0
#define CPU_0_RX_2_HAS_TRI 0
#define CPU_0_RX_2_IRQ_TYPE NONE
#define CPU_0_RX_2_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_rx_1', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_RX_1_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_RX_1_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_RX_1_COMPONENT_NAME cpu_0_rx_1
#define CPU_0_RX_1_BASE 0x170
#define CPU_0_RX_1_SPAN 32
#define CPU_0_RX_1_END 0x18f
#define CPU_0_RX_1_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_RX_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_RX_1_CAPTURE 0
#define CPU_0_RX_1_DATA_WIDTH 32
#define CPU_0_RX_1_DO_TEST_BENCH_WIRING 0
#define CPU_0_RX_1_DRIVEN_SIM_VALUE 0
#define CPU_0_RX_1_EDGE_TYPE NONE
#define CPU_0_RX_1_FREQ 50000000
#define CPU_0_RX_1_HAS_IN 1
#define CPU_0_RX_1_HAS_OUT 0
#define CPU_0_RX_1_HAS_TRI 0
#define CPU_0_RX_1_IRQ_TYPE NONE
#define CPU_0_RX_1_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_rx_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_RX_0_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_RX_0_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_RX_0_COMPONENT_NAME cpu_0_rx_0
#define CPU_0_RX_0_BASE 0x180
#define CPU_0_RX_0_SPAN 32
#define CPU_0_RX_0_END 0x19f
#define CPU_0_RX_0_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_RX_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_RX_0_CAPTURE 0
#define CPU_0_RX_0_DATA_WIDTH 32
#define CPU_0_RX_0_DO_TEST_BENCH_WIRING 0
#define CPU_0_RX_0_DRIVEN_SIM_VALUE 0
#define CPU_0_RX_0_EDGE_TYPE NONE
#define CPU_0_RX_0_FREQ 50000000
#define CPU_0_RX_0_HAS_IN 1
#define CPU_0_RX_0_HAS_OUT 0
#define CPU_0_RX_0_HAS_TRI 0
#define CPU_0_RX_0_IRQ_TYPE NONE
#define CPU_0_RX_0_RESET_VALUE 0

/*
 * Macros for device 'noc_status_1', class 'altera_avalon_pio'
 * The macros are prefixed with 'NOC_STATUS_1_'.
 * The prefix is the slave descriptor.
 */
#define NOC_STATUS_1_COMPONENT_TYPE altera_avalon_pio
#define NOC_STATUS_1_COMPONENT_NAME noc_status_1
#define NOC_STATUS_1_BASE 0x190
#define NOC_STATUS_1_SPAN 32
#define NOC_STATUS_1_END 0x1af
#define NOC_STATUS_1_BIT_CLEARING_EDGE_REGISTER 0
#define NOC_STATUS_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NOC_STATUS_1_CAPTURE 0
#define NOC_STATUS_1_DATA_WIDTH 32
#define NOC_STATUS_1_DO_TEST_BENCH_WIRING 0
#define NOC_STATUS_1_DRIVEN_SIM_VALUE 0
#define NOC_STATUS_1_EDGE_TYPE NONE
#define NOC_STATUS_1_FREQ 50000000
#define NOC_STATUS_1_HAS_IN 1
#define NOC_STATUS_1_HAS_OUT 0
#define NOC_STATUS_1_HAS_TRI 0
#define NOC_STATUS_1_IRQ_TYPE NONE
#define NOC_STATUS_1_RESET_VALUE 0

/*
 * Macros for device 'noc_ctrl_1', class 'altera_avalon_pio'
 * The macros are prefixed with 'NOC_CTRL_1_'.
 * The prefix is the slave descriptor.
 */
#define NOC_CTRL_1_COMPONENT_TYPE altera_avalon_pio
#define NOC_CTRL_1_COMPONENT_NAME noc_ctrl_1
#define NOC_CTRL_1_BASE 0x1a0
#define NOC_CTRL_1_SPAN 32
#define NOC_CTRL_1_END 0x1bf
#define NOC_CTRL_1_BIT_CLEARING_EDGE_REGISTER 0
#define NOC_CTRL_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NOC_CTRL_1_CAPTURE 0
#define NOC_CTRL_1_DATA_WIDTH 32
#define NOC_CTRL_1_DO_TEST_BENCH_WIRING 0
#define NOC_CTRL_1_DRIVEN_SIM_VALUE 0
#define NOC_CTRL_1_EDGE_TYPE NONE
#define NOC_CTRL_1_FREQ 50000000
#define NOC_CTRL_1_HAS_IN 0
#define NOC_CTRL_1_HAS_OUT 1
#define NOC_CTRL_1_HAS_TRI 0
#define NOC_CTRL_1_IRQ_TYPE NONE
#define NOC_CTRL_1_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_tx_7', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_TX_7_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_TX_7_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_TX_7_COMPONENT_NAME cpu_0_tx_7
#define CPU_0_TX_7_BASE 0x1b0
#define CPU_0_TX_7_SPAN 32
#define CPU_0_TX_7_END 0x1cf
#define CPU_0_TX_7_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_TX_7_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_TX_7_CAPTURE 0
#define CPU_0_TX_7_DATA_WIDTH 32
#define CPU_0_TX_7_DO_TEST_BENCH_WIRING 0
#define CPU_0_TX_7_DRIVEN_SIM_VALUE 0
#define CPU_0_TX_7_EDGE_TYPE NONE
#define CPU_0_TX_7_FREQ 50000000
#define CPU_0_TX_7_HAS_IN 0
#define CPU_0_TX_7_HAS_OUT 1
#define CPU_0_TX_7_HAS_TRI 0
#define CPU_0_TX_7_IRQ_TYPE NONE
#define CPU_0_TX_7_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_tx_6', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_TX_6_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_TX_6_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_TX_6_COMPONENT_NAME cpu_0_tx_6
#define CPU_0_TX_6_BASE 0x1c0
#define CPU_0_TX_6_SPAN 32
#define CPU_0_TX_6_END 0x1df
#define CPU_0_TX_6_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_TX_6_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_TX_6_CAPTURE 0
#define CPU_0_TX_6_DATA_WIDTH 32
#define CPU_0_TX_6_DO_TEST_BENCH_WIRING 0
#define CPU_0_TX_6_DRIVEN_SIM_VALUE 0
#define CPU_0_TX_6_EDGE_TYPE NONE
#define CPU_0_TX_6_FREQ 50000000
#define CPU_0_TX_6_HAS_IN 0
#define CPU_0_TX_6_HAS_OUT 1
#define CPU_0_TX_6_HAS_TRI 0
#define CPU_0_TX_6_IRQ_TYPE NONE
#define CPU_0_TX_6_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_tx_5', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_TX_5_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_TX_5_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_TX_5_COMPONENT_NAME cpu_0_tx_5
#define CPU_0_TX_5_BASE 0x1d0
#define CPU_0_TX_5_SPAN 32
#define CPU_0_TX_5_END 0x1ef
#define CPU_0_TX_5_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_TX_5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_TX_5_CAPTURE 0
#define CPU_0_TX_5_DATA_WIDTH 32
#define CPU_0_TX_5_DO_TEST_BENCH_WIRING 0
#define CPU_0_TX_5_DRIVEN_SIM_VALUE 0
#define CPU_0_TX_5_EDGE_TYPE NONE
#define CPU_0_TX_5_FREQ 50000000
#define CPU_0_TX_5_HAS_IN 0
#define CPU_0_TX_5_HAS_OUT 1
#define CPU_0_TX_5_HAS_TRI 0
#define CPU_0_TX_5_IRQ_TYPE NONE
#define CPU_0_TX_5_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_tx_4', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_TX_4_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_TX_4_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_TX_4_COMPONENT_NAME cpu_0_tx_4
#define CPU_0_TX_4_BASE 0x1e0
#define CPU_0_TX_4_SPAN 32
#define CPU_0_TX_4_END 0x1ff
#define CPU_0_TX_4_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_TX_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_TX_4_CAPTURE 0
#define CPU_0_TX_4_DATA_WIDTH 32
#define CPU_0_TX_4_DO_TEST_BENCH_WIRING 0
#define CPU_0_TX_4_DRIVEN_SIM_VALUE 0
#define CPU_0_TX_4_EDGE_TYPE NONE
#define CPU_0_TX_4_FREQ 50000000
#define CPU_0_TX_4_HAS_IN 0
#define CPU_0_TX_4_HAS_OUT 1
#define CPU_0_TX_4_HAS_TRI 0
#define CPU_0_TX_4_IRQ_TYPE NONE
#define CPU_0_TX_4_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_tx_3', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_TX_3_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_TX_3_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_TX_3_COMPONENT_NAME cpu_0_tx_3
#define CPU_0_TX_3_BASE 0x1f0
#define CPU_0_TX_3_SPAN 32
#define CPU_0_TX_3_END 0x20f
#define CPU_0_TX_3_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_TX_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_TX_3_CAPTURE 0
#define CPU_0_TX_3_DATA_WIDTH 32
#define CPU_0_TX_3_DO_TEST_BENCH_WIRING 0
#define CPU_0_TX_3_DRIVEN_SIM_VALUE 0
#define CPU_0_TX_3_EDGE_TYPE NONE
#define CPU_0_TX_3_FREQ 50000000
#define CPU_0_TX_3_HAS_IN 0
#define CPU_0_TX_3_HAS_OUT 1
#define CPU_0_TX_3_HAS_TRI 0
#define CPU_0_TX_3_IRQ_TYPE NONE
#define CPU_0_TX_3_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_tx_2', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_TX_2_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_TX_2_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_TX_2_COMPONENT_NAME cpu_0_tx_2
#define CPU_0_TX_2_BASE 0x200
#define CPU_0_TX_2_SPAN 32
#define CPU_0_TX_2_END 0x21f
#define CPU_0_TX_2_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_TX_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_TX_2_CAPTURE 0
#define CPU_0_TX_2_DATA_WIDTH 32
#define CPU_0_TX_2_DO_TEST_BENCH_WIRING 0
#define CPU_0_TX_2_DRIVEN_SIM_VALUE 0
#define CPU_0_TX_2_EDGE_TYPE NONE
#define CPU_0_TX_2_FREQ 50000000
#define CPU_0_TX_2_HAS_IN 0
#define CPU_0_TX_2_HAS_OUT 1
#define CPU_0_TX_2_HAS_TRI 0
#define CPU_0_TX_2_IRQ_TYPE NONE
#define CPU_0_TX_2_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_tx_1', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_TX_1_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_TX_1_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_TX_1_COMPONENT_NAME cpu_0_tx_1
#define CPU_0_TX_1_BASE 0x210
#define CPU_0_TX_1_SPAN 32
#define CPU_0_TX_1_END 0x22f
#define CPU_0_TX_1_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_TX_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_TX_1_CAPTURE 0
#define CPU_0_TX_1_DATA_WIDTH 32
#define CPU_0_TX_1_DO_TEST_BENCH_WIRING 0
#define CPU_0_TX_1_DRIVEN_SIM_VALUE 0
#define CPU_0_TX_1_EDGE_TYPE NONE
#define CPU_0_TX_1_FREQ 50000000
#define CPU_0_TX_1_HAS_IN 0
#define CPU_0_TX_1_HAS_OUT 1
#define CPU_0_TX_1_HAS_TRI 0
#define CPU_0_TX_1_IRQ_TYPE NONE
#define CPU_0_TX_1_RESET_VALUE 0

/*
 * Macros for device 'noc_status_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'NOC_STATUS_0_'.
 * The prefix is the slave descriptor.
 */
#define NOC_STATUS_0_COMPONENT_TYPE altera_avalon_pio
#define NOC_STATUS_0_COMPONENT_NAME noc_status_0
#define NOC_STATUS_0_BASE 0x220
#define NOC_STATUS_0_SPAN 32
#define NOC_STATUS_0_END 0x23f
#define NOC_STATUS_0_BIT_CLEARING_EDGE_REGISTER 0
#define NOC_STATUS_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NOC_STATUS_0_CAPTURE 0
#define NOC_STATUS_0_DATA_WIDTH 32
#define NOC_STATUS_0_DO_TEST_BENCH_WIRING 0
#define NOC_STATUS_0_DRIVEN_SIM_VALUE 0
#define NOC_STATUS_0_EDGE_TYPE NONE
#define NOC_STATUS_0_FREQ 50000000
#define NOC_STATUS_0_HAS_IN 1
#define NOC_STATUS_0_HAS_OUT 0
#define NOC_STATUS_0_HAS_TRI 0
#define NOC_STATUS_0_IRQ_TYPE NONE
#define NOC_STATUS_0_RESET_VALUE 0

/*
 * Macros for device 'noc_ctrl_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'NOC_CTRL_0_'.
 * The prefix is the slave descriptor.
 */
#define NOC_CTRL_0_COMPONENT_TYPE altera_avalon_pio
#define NOC_CTRL_0_COMPONENT_NAME noc_ctrl_0
#define NOC_CTRL_0_BASE 0x230
#define NOC_CTRL_0_SPAN 32
#define NOC_CTRL_0_END 0x24f
#define NOC_CTRL_0_BIT_CLEARING_EDGE_REGISTER 0
#define NOC_CTRL_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NOC_CTRL_0_CAPTURE 0
#define NOC_CTRL_0_DATA_WIDTH 32
#define NOC_CTRL_0_DO_TEST_BENCH_WIRING 0
#define NOC_CTRL_0_DRIVEN_SIM_VALUE 0
#define NOC_CTRL_0_EDGE_TYPE NONE
#define NOC_CTRL_0_FREQ 50000000
#define NOC_CTRL_0_HAS_IN 0
#define NOC_CTRL_0_HAS_OUT 1
#define NOC_CTRL_0_HAS_TRI 0
#define NOC_CTRL_0_IRQ_TYPE NONE
#define NOC_CTRL_0_RESET_VALUE 0

/*
 * Macros for device 'cpu_0_tx_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'CPU_0_TX_0_'.
 * The prefix is the slave descriptor.
 */
#define CPU_0_TX_0_COMPONENT_TYPE altera_avalon_pio
#define CPU_0_TX_0_COMPONENT_NAME cpu_0_tx_0
#define CPU_0_TX_0_BASE 0x240
#define CPU_0_TX_0_SPAN 32
#define CPU_0_TX_0_END 0x25f
#define CPU_0_TX_0_BIT_CLEARING_EDGE_REGISTER 0
#define CPU_0_TX_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CPU_0_TX_0_CAPTURE 0
#define CPU_0_TX_0_DATA_WIDTH 32
#define CPU_0_TX_0_DO_TEST_BENCH_WIRING 0
#define CPU_0_TX_0_DRIVEN_SIM_VALUE 0
#define CPU_0_TX_0_EDGE_TYPE NONE
#define CPU_0_TX_0_FREQ 50000000
#define CPU_0_TX_0_HAS_IN 0
#define CPU_0_TX_0_HAS_OUT 1
#define CPU_0_TX_0_HAS_TRI 0
#define CPU_0_TX_0_IRQ_TYPE NONE
#define CPU_0_TX_0_RESET_VALUE 0

/*
 * Macros for device 'sw', class 'altera_avalon_pio'
 * The macros are prefixed with 'SW_'.
 * The prefix is the slave descriptor.
 */
#define SW_COMPONENT_TYPE altera_avalon_pio
#define SW_COMPONENT_NAME sw
#define SW_BASE 0x250
#define SW_SPAN 32
#define SW_END 0x26f
#define SW_BIT_CLEARING_EDGE_REGISTER 0
#define SW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SW_CAPTURE 0
#define SW_DATA_WIDTH 10
#define SW_DO_TEST_BENCH_WIRING 0
#define SW_DRIVEN_SIM_VALUE 0
#define SW_EDGE_TYPE NONE
#define SW_FREQ 50000000
#define SW_HAS_IN 1
#define SW_HAS_OUT 0
#define SW_HAS_TRI 0
#define SW_IRQ_TYPE NONE
#define SW_RESET_VALUE 0

/*
 * Macros for device 'led', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_'.
 * The prefix is the slave descriptor.
 */
#define LED_COMPONENT_TYPE altera_avalon_pio
#define LED_COMPONENT_NAME led
#define LED_BASE 0x260
#define LED_SPAN 32
#define LED_END 0x27f
#define LED_BIT_CLEARING_EDGE_REGISTER 0
#define LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_CAPTURE 0
#define LED_DATA_WIDTH 10
#define LED_DO_TEST_BENCH_WIRING 0
#define LED_DRIVEN_SIM_VALUE 0
#define LED_EDGE_TYPE NONE
#define LED_FREQ 50000000
#define LED_HAS_IN 0
#define LED_HAS_OUT 1
#define LED_HAS_TRI 0
#define LED_IRQ_TYPE NONE
#define LED_RESET_VALUE 1023


#endif /* _ALTERA_HPS_0_H_ */
